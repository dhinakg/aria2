name: build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-11, macos-12]
        run_step:
          - cd build-release && make
#           - cd build-release && make -j"$(sysctl -n hw.ncpu)"
          - cd build-release && make deps -j"$(sysctl -n hw.ncpu)" && make -j"$(sysctl -n hw.ncpu)"
      fail-fast: false
          
    runs-on: ${{ matrix.os }}
    env:
      NON_RELEASE: 1
    steps:
    - uses: actions/checkout@v3
    - name: MacOS setup
      run: |
        brew install cppunit gettext openssl libssh2 c-ares sqlite3 \
          autoconf automake pkg-config libtool gnu-sed
        pip3 install sphinx
    - name: Setup clang
      run: |
        echo 'CC=clang' >> $GITHUB_ENV
        echo 'CXX=clang++' >> $GITHUB_ENV
    - name: Setup build
      run: |
        autoreconf -i
        mkdir build-release
        cd build-release
        ln -s ../makerelease-osx.mk Makefile
    - name: Build
      run: ${{ matrix.run_step }}
    - name: Ls
      run: ls -lsall build-release

  build-docker:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Linux setup
      run: |
        docker build -t aria2-mingw - < Dockerfile.mingw
        id=$(docker create aria2-mingw)
        docker cp $id:/aria2/src/aria2c.exe .
        docker rm -v $id
    - uses: actions/upload-artifact@v3
      with:
        path: aria2c.exe
